{
	"info": {
		"_postman_id": "2a339bf6-f5ac-47c4-b24d-986fd0306d6b",
		"name": "Weather sensor REST API",
		"description": "This project is a tests for RESTful API for managing sensors and their measurements. It allows you to create and manage sensor data and measurements, including registering new sensors, adding measurements, retrieving measurements, and counting rainy days. The API is implemented using Spring Boot and leverages OpenAPI (Swagger) for documentation.  \n_Link:_ [https://github.com/PapaEmeritus4/sensor-rest-api-service](https://github.com/PapaEmeritus4/sensor-rest-api-service)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30992599",
		"_collection_link": "https://www.postman.com/volodymyrbylan/my-qa-projects/collection/2v5fzne/weather-sensor-rest-api?action=share&source=collection_link&creator=30992599"
	},
	"item": [
		{
			"name": "Sensor",
			"item": [
				{
					"name": "Successful Sensor registration",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is not null\", function () {\r",
									"    pm.expect(pm.response.json()).to.not.be.null;\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"TestName\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/sensors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"sensors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unsuccessful Sensor registration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is not null\", function () {\r",
									"    pm.expect(pm.response.json()).to.not.be.null;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"TestName\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/sensors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"sensors"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Measurement",
			"item": [
				{
					"name": "Add measurement",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"value\": 24.5,\r\n  \"raining\": true,\r\n  \"sensor\": {\r\n    \"name\": \"TestName\"\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/measurements",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"measurements"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all measurements",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/measurements",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"measurements"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get rainy days count",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/measurements/rainy-days-count",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"measurements",
								"rainy-days-count"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"pm.test(\"Response time is less than 200ms\", function () {\r",
					"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "",
			"type": "string"
		}
	]
}